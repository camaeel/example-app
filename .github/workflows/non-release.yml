on:
  push:
    paths-ignore:
      - 'charts/**'
      - 'example/**'
      - 'docs/**'
      - '/*.md'
      - 'tests.rest'
    branches:
      - '*'
  pull_request:
    paths-ignore:
      - 'example/**'
      - 'charts/**'
      - 'docs/**'
      - '/*.md'
      - 'tests.rest'
  workflow_call:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

name: Build and test
jobs:
  test-and-release-snapshot:
    permissions:
      contents: read
      packages: write    
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: './go.mod'
          cache: true
        id: go

      - name: Download Go modules
        run: go mod download
        env:
          GOPROXY: https://proxy.golang.org

      - name: Test
        run: |
          # go get github.com/golang/mock/mockgen
          # go install github.com/golang/mock/mockgen
          go generate ./...
          go test ./...

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set SNAPSHOT_VERSION if not pull request
        if: github.event_name != 'pull_request'
        run: |
          echo "SNAPSHOT_VERSION=${{ env.GITHUB_REF_NAME }}" >> $GITHUB_ENV
      - name: Run GoReleaser  
        uses: goreleaser/goreleaser-action@v5
        with:
          version: latest
          args: release --clean --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Push images to registry
        if: github.event_name != 'pull_request'
        run: |
          bash <(cat dist/artifacts.json| jq -r '.[] | select(.type=="Docker Image") | "docker push \(.name|@sh)"')

