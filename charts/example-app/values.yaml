# Default values for example-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

image:
  repository: ghcr.io/camaeel/example-app
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  seccompProfile:
    type: RuntimeDefault
  # fsGroup: 2000

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /healthz
    port: http
readinessProbe:
  httpGet:
    path: /healthz
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

env:
  # uncomment for bitnamidatabase
#  - name: DATABASE_URL
#    valueFrom:
#      secretKeyRef:
#        name: "postgres-credentials"
#        key: DATABASE_URL
  # uncomment for cnpg db
  - name: DATABASE_URL
    valueFrom:
      secretKeyRef:
        name: example-app-cnpgdb-app
        key: uri

# enables integrated postgres from bitnami chart
bitnamipostgres:
  enabled: false
  auth:
    existingSecret: "postgres-credentials"
    username: example-app
    database: example

  sslmode: disable

# enable db managed by cloud native PG operator
cnpgdb:
  enabled: false
  storage:
    size: 1Gi
  backup:
    barmanObjectStore:
      destinationPath: s3://example-app-dev-postgres-backup/
      s3Credentials:
        inheritFromIAMRole: false
        accessKeyId:
          name: example-app-cnpgdb-db-backup-aws-creds
          key: access_key
        secretAccessKey:
          name: example-app-cnpgdb-db-backup-aws-creds
          key: secret_key
#        region:
        sessionToken:
          name: example-app-cnpgdb-db-backup-aws-creds
          key: security_token
      wal:
        compression: gzip
        maxParallel: 2
#        encryption: "aws:kms" #unset to use buckets default ustomer-manage KMS key
      data:
        compression: gzip
#        encryption: "aws:kms" #unset to use buckets default ustomer-manage KMS key
      tags:
        project: example-app
        env_name: dev
        source:	https://github.com/camaeel/example-app
      historyTags:
        historical: "true"

    # should be lower than S3 bucket retention policy
    retentionPolicy: 10d
#    target:
  scheduleBackups:
    - name: daily
      schedule: "20 22 * * *"

  # external secrets operator enabled
  eso:
    enabled: true
    databaseBackup:
      #vaultUrl: "https://vault.example.com"
      credsPath: /aws/creds/example-app-dev-postgres-backup
      auth:
        mountPath: kubernetes
        role: example-app-dev-postgres-backup
